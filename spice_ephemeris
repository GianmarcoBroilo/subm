

import numpy as np
from tudatpy.util import result2array
from tudatpy.kernel import constants
from tudatpy.kernel import numerical_simulation
from tudatpy.kernel.interface import spice
from tudatpy.kernel.numerical_simulation import environment_setup
from tudatpy.kernel.numerical_simulation import propagation_setup, propagation
import pandas as pd
################################################################################
# GENERAL SIMULATION SETUP #####################################################
################################################################################

# Load spice kernels.
spice.load_standard_kernels()

# Set simulation start epoch.
simulation_start_epoch = 1.0e7

# Set simulation end epoch.
simulation_end_epoch = 1.0e7 + 15.0 * constants.JULIAN_YEAR

# Define bodies in simulation.
bodies_to_create = bodies_to_propagate = [
    "Sun",
    "Io",
    "Jupiter",
]

# Create bodies in simulation.
body_settings = environment_setup.get_default_body_settings(bodies_to_create)
body_system = environment_setup.create_system_of_bodies(body_settings)



time = np.linspace(simulation_start_epoch,simulation_end_epoch,3600)

jupiter_state_vector = []
io_state_vector = []
for t in time:
    for i, body in enumerate(bodies_to_propagate):

        if body == "Jupiter":
            jupiter_state = spice.get_body_cartesian_state_at_epoch(
            target_body_name="Jupiter",
            observer_body_name="SSB",
            reference_frame_name="ECLIPJ2000",
            aberration_corrections="NONE",
            ephemeris_time=t
            )
            jupiter_state_vector.append(jupiter_state)
            state_jupiter = pd.DataFrame(data=jupiter_state_vector,
                 columns=" pos_x pos_y pos_x vel_x vel_y vel_z".split())

        elif body == "Io":
            io_state = spice.get_body_cartesian_state_at_epoch(
            target_body_name="Io",
            observer_body_name="SSB",
            reference_frame_name="ECLIPJ2000",
            aberration_corrections="NONE",
            ephemeris_time=t
            )
            io_state_vector.append(io_state)
            state_io = pd.DataFrame(data=io_state_vector,
                 columns=" pos_x pos_y pos_x vel_x vel_y vel_z".split())


#header = '%10s\t%10s\t%10s\t%15s\t%5s\t%5s'%('X','Y','Z','Vx','Vy','Vz')
np.savetxt('spice_state_Jupiter.txt', state_jupiter, fmt='%d', delimiter="\t", comments='')
np.savetxt('spice_state_Io.txt', state_io, fmt='%d', delimiter="\t", comments='')


